'''
1 由于连通、边数为n-1的图一定是一棵树，因此需要判断给定数据是否能使图连通。使用并查集判断方法：
每读入一条边的两个端点，判断这两个端点是否属于相同的集合，如果不同，则将它们合并到一个集合中，当处理完所有边后根据最终产生的集合个数是否为1来判断给定的图是否连通。
2 确定图连通后，则确定了树，选择合适根结点使树高最大的做法为：
先任意选择一个结点，从该节点开始遍历整棵树，获取能达到的最深的结点，记为集合A；然后从集合A中任意一个结点出发遍历整棵树，获取能达到的最深顶点，记为结点集合B。集合A与B的并集就是所求结果。
————————————————
版权声明：本文为CSDN博主「码奴生来就只知道前进」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/hy971216/article/details/82252707
'''
inf = float('inf')
n = int(input())
graph = [[inf for i in range(n)] for j in range(n)]
graph2 = []
for i in range(n - 1):
    u, v = list(map(lambda x: int(x), input().split(' ')))
    graph[u - 1][v - 1] = 1
    graph[v - 1][u - 1] = 1
    graph.append([u,v])



